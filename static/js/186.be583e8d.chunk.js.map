{"version":3,"file":"static/js/186.be583e8d.chunk.js","mappings":"yOA0CA,UApCgB,WACZ,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,8GAEWC,EAAAA,EAAAA,GAAmBT,GAF9B,OAENU,EAFM,OAGZN,EAAWM,GACXC,QAAQC,IAAIF,GAJA,gDAOZJ,EAAS,EAAD,IAPI,yDAAH,qDAUjBE,GACH,GAAC,CAACR,KAEC,gCACKK,IAAS,yBAAMA,KAChB,SAAC,KAAD,UACKF,EAAQU,KAAI,SAAAC,GACT,OACI,UAAC,KAAD,YACI,SAAC,KAAD,WAAM,UAAC,KAAD,sBAAqBA,EAAOC,aAClC,SAAC,KAAD,UAAOD,EAAOE,YAFPF,EAAOd,GAKzB,QAIhB,C,+JCtCYiB,EAAOC,EAAAA,GAAAA,EAAH,yCAIJC,EAAOD,EAAAA,GAAAA,GAAH,iEAKJE,EAAOF,EAAAA,GAAAA,GAAH,8CAKJG,EAAaH,EAAAA,GAAAA,KAAH,yC,kMCdvBI,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACQ,uBADRA,EAEM,gBAFNA,EAGY,SAHZA,EAIY,WAJZA,EAKO,WAIAC,EAAS,mCAAG,yGAAOC,EAAP,+BAAY,EAAZ,SACEH,EAAAA,EAAAA,IAAA,UAAaC,EAAb,iBAAyCE,EAAzC,uCACnB,CACIC,OAAQ,CACJC,QAAS,sCAJA,cACfjB,EADe,OAQrBC,QAAQC,IAAIF,EAASkB,KAAKC,SARL,kBASdnB,EAASkB,KAAKC,SATA,2CAAH,qDAYTC,EAAmB,mCAAG,WAAOC,GAAP,4FAAcN,EAAd,+BAAqB,EAArB,SACRH,EAAAA,EAAAA,IAAA,UAAaC,EAAb,iBAAuCE,EAAvC,kBAAqDM,EAArD,uCAClB,CACGL,OAAQ,CACJC,QAAS,sCAJU,cACzBjB,EADyB,yBAOxBA,EAASkB,KAAKC,SAPU,2CAAH,sDAUnBG,EAAkB,mCAAG,WAAOhC,GAAP,uFACPsB,EAAAA,EAAAA,IAAA,UAAaC,EAAb,YAAwCvB,EAAxC,mBAClB,CACG0B,OAAQ,CACJC,QAAS,sCAJS,cACxBjB,EADwB,yBAOvBA,EAASkB,MAPc,2CAAH,sDAUlBK,EAAkB,mCAAG,WAAOjC,GAAP,uFACPsB,EAAAA,EAAAA,IAAA,iBAAoBtB,GAApB,OAAyBuB,EAAzB,mBAClB,CACGG,OAAQ,CACJC,QAAS,sCAJS,cACxBjB,EADwB,yBAOvBA,EAASkB,KAAKM,MAPS,2CAAH,sDAUlBzB,EAAkB,mCAAG,WAAOT,GAAP,4FAAWyB,EAAX,+BAAkB,EAAlB,SACPH,EAAAA,EAAAA,IAAA,iBAAoBtB,GAApB,OAAyBuB,EAAzB,iBAAoDE,EAApD,mBACvB,CACQC,OAAQ,CACJC,QAAS,sCAJS,cACxBjB,EADwB,yBAOvBA,EAASkB,KAAKC,SAPS,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","components/Reviews/Reviews.styled.jsx","filmApi.js"],"sourcesContent":["import { fetchMoviesreviews } from \"filmApi\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { AuthorName, Item, List, Text } from \"./Reviews.styled\";\n\nconst Reviews = () => {\n    const { id } = useParams()\n\n    const [reviews, setReviews] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchReview = async () => {\n            try {\n                const response = await fetchMoviesreviews(id);\n                setReviews(response)\n                console.log(response)\n            }\n            catch (error) {\n                setError(error)\n            }\n        }\n        fetchReview()\n    },[id])\n    return (\n        <>\n            {error && <div>{error}</div>} \n            <List>\n                {reviews.map(review => {\n                    return (\n                        <Item key={review.id}>\n                            <Text><AuthorName>Author: {review.author}</AuthorName></Text>\n                            <Text>{review.content}</Text>\n                        </Item>\n                    )\n                })}\n            </List>\n        </>\n    )\n}\n\nexport default Reviews;","import styled from \"styled-components\";\n\nexport const Text = styled.p`\ncolor: #f5f5f5;\n`\n\nexport const Item = styled.li`\nlist-style: none;\nmargin-bottom: 32px;\n` \n\nexport const List = styled.ul`\npadding-left: 0px;\n\n`\n\nexport const AuthorName = styled.span`\nfont-size: 24px;\n`","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n    trending: '/trending/movie/week',\n    search: '/search/movie',\n    movieDetails: '/movie',\n    movieCredits: '/credits',\n    reviews: '/reviews',\n\n}\n\nexport const getMovies = async (page=1) => {\n    const response = await axios.get(`${END_POINTS.trending}?page=${page}&language=en-US&include_adult=false`,\n        {\n            params: {\n                api_key: '8234db11c162011590d14a3080848ed6', \n            }\n        }\n    )\n    console.log(response.data.results)\n    return response.data.results;\n}\n\nexport const fetchMoviesByQuerry = async (query, page = 1) => {\n    const response = await axios.get(`${END_POINTS.search}?page=${page}&query=${query}&language=en-US&include_adult=false`,\n         {\n            params: {\n                api_key: '8234db11c162011590d14a3080848ed6', \n            }\n        })\n    return response.data.results\n}\n\nexport const fetchMoviesDetails = async (id) => {\n    const response = await axios.get(`${END_POINTS.movieDetails}/${id}?language=en-US`,\n         {\n            params: {\n                api_key: '8234db11c162011590d14a3080848ed6', \n            }\n        })\n    return response.data\n}\n\nexport const fetchMoviesCredits = async (id) => {\n    const response = await axios.get(`/movie/${id}${END_POINTS.movieCredits}?language=en-US`,\n         {\n            params: {\n                api_key: '8234db11c162011590d14a3080848ed6', \n            }\n        })\n    return response.data.cast\n}\n\nexport const fetchMoviesreviews = async (id, page = 1) => {\n    const response = await axios.get(`/movie/${id}${END_POINTS.reviews}?page=${page}&language=en-US`,\n    {\n            params: {\n                api_key: '8234db11c162011590d14a3080848ed6', \n            }\n        })\n    return response.data.results\n}\n\n"],"names":["id","useParams","useState","reviews","setReviews","error","setError","useEffect","fetchReview","fetchMoviesreviews","response","console","log","map","review","author","content","Text","styled","Item","List","AuthorName","axios","END_POINTS","getMovies","page","params","api_key","data","results","fetchMoviesByQuerry","query","fetchMoviesDetails","fetchMoviesCredits","cast"],"sourceRoot":""}